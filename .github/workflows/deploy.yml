  # -------------------------
  # Semgrep Security Scan
  # -------------------------
  semgrep-scan:
    runs-on: ubuntu-latest
    outputs:
      scan-status: ${{ steps.semgrep.outputs.status }}
      issues-found: ${{ steps.check.outputs.issues }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Semgrep CLI
        run: |
          curl -sSL https://github.com/returntocorp/semgrep/releases/download/v1.46.0/semgrep-linux-amd64-v1.46.0 -o semgrep
          chmod +x semgrep
          sudo mv semgrep /usr/local/bin/

      - name: Run Semgrep scan
        id: semgrep
        run: |
          semgrep --config p/ci --error --sarif > semgrep.sarif || true
          semgrep --config p/ci > semgrep-summary.txt || true
          echo "status=completed" >> $GITHUB_OUTPUT

      - name: Check for issues
        id: check
        run: |
          if [ -s semgrep-summary.txt ]; then
            echo "issues=true" >> $GITHUB_OUTPUT
          else
            echo "issues=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Semgrep results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif
          path: semgrep.sarif

  # -------------------------
  # Build & Deploy React App
  # -------------------------
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: semgrep-scan
    if: needs.semgrep-scan.outputs.issues-found == 'false'  # üö® Skip if issues found
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PROJECT_NAME }}
          directory: ./build

  # -------------------------
  # Discord Notification (always runs)
  # -------------------------
  notify-discord:
    runs-on: ubuntu-latest
    needs: [semgrep-scan, build-and-deploy]
    if: always()
    steps:
      - name: Prepare Semgrep summary
        run: |
          if [ -s semgrep-summary.txt ]; then
            SUMMARY="$(head -n 15 semgrep-summary.txt)"
            COLOR=15158332   # üî¥ Red
          else
            SUMMARY="‚úÖ No issues found"
            COLOR=3066993    # üü¢ Green
          fi

          echo "SEMGRP_SUMMARY<<EOF" >> $GITHUB_ENV
          echo "$SUMMARY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "SEMGRP_COLOR=$COLOR" >> $GITHUB_ENV

      - name: Send Discord notification
        uses: rjstone/discord-webhook-notify@v2.2.1
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: "üöÄ Build & Deploy Report"
          description: |
            **Branch**: `${{ github.ref_name }}`
            **Commit**: `${{ github.sha }}`
            **Semgrep Status**: `${{ needs.semgrep-scan.outputs.scan-status }}`
            **Deploy Status**: ${{ needs.build-and-deploy.result }}
          text: |
            üîç **Semgrep Findings (Top 15)**:
            ```bash
            ${{ env.SEMGRP_SUMMARY }}
            ```
          color: "${{ env.SEMGRP_COLOR }}"
