notify:
  runs-on: ubuntu-latest
  needs: deploy
  if: always()
  steps:
    - name: Download Semgrep summary
      uses: actions/download-artifact@v4
      with:
        name: semgrep-summary
        path: ./semgrep

    - name: Download build artifact (optional)
      uses: actions/download-artifact@v4
      with:
        name: build
        path: ./build

    - name: Prepare full deployment report
      id: full_report
      run: |
        BRANCH="${GITHUB_REF##*/}"
        COMMIT_SHORT="${GITHUB_SHA::7}"
        COMMIT_URL="https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
        NOW=$(date +"%Y-%m-%d %H:%M:%S %Z")

        if [ -f ./semgrep/semgrep-summary.txt ]; then
          SEMGREP_SUMMARY=$(sed -n '1,500p' ./semgrep/semgrep-summary.txt)
        else
          SEMGREP_SUMMARY="No semgrep-summary artifact found"
        fi

        BUILD_STATUS="${{ needs.build.result }}"
        DEPLOY_STATUS="${{ needs.deploy.result }}"

        REPORT_CONTENT=$(cat <<EOF
Branch: ${BRANCH}
Commit: ${COMMIT_SHORT} - ${COMMIT_URL}
Date/Time: ${NOW}
Build status: ${BUILD_STATUS}
Deploy status: ${DEPLOY_STATUS}

Semgrep Findings:
${SEMGREP_SUMMARY}
EOF
)

        # Write to GITHUB_OUTPUT safely for multiline
        echo "report<<EOF" >> $GITHUB_OUTPUT
        echo "$REPORT_CONTENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Send Discord notification
      uses: rjstone/discord-webhook-notify@v2.2.1
      with:
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
        title: "üöÄ Build & Deploy Report"
        description: |
          **Branch**: `${{ github.ref_name }}`
          **Commit**: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          **Semgrep Status**: `${{ needs.semgrep-scan.outputs.scan-status }}`
          **Build Status**: ${{ needs.build.result }}
          **Deploy Status**: ${{ needs.deploy.result }}
          **Date/Time**: `${{ steps.full_report.outputs.report }}`
        text: |
          üîç **Full Deployment Report**:
          ```
          ${{ steps.full_report.outputs.report }}
          ```
        color: "${{ needs.semgrep-scan.outputs.semgrep-color }}"
