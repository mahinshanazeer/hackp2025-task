name: Build & Deploy React to Cloudflare Pages

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Install Semgrep
      - name: Install Semgrep
        run: |
          pip install --upgrade pip
          pip install semgrep
    
      # Run Semgrep (SAST)
      - name: Run Semgrep SAST
        id: semgrep
        run: |
          export SEMGREP_NO_METRICS=1
          semgrep scan --config ci-secrets.yml --json --verbose > semgrep-results.json || true


      # Notify Discord with  Semgrep Results
      - name: Notify Discord (Semgrep Results) 
        run: |
          findings=$(jq '.results | length' semgrep-results.json)
          summary="No issues found üéâ"
          color=3066993
          if [ "$findings" -gt 0 ]; then
            summary="$findings issue(s) found ‚ö†Ô∏è"
            color=15158332
          fi

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"username\": \"CI/CD Bot\", \"embeds\": [{\"title\": \"üîç Semgrep Scan Report\",\"color\": $color,\"fields\":[{\"name\":\"Repository\",\"value\":\"${{ github.repository }}\"},{\"name\":\"Branch\",\"value\":\"${{ github.ref_name }}\"},{\"name\":\"Summary\",\"value\":\"$summary\"},{\"name\":\"Workflow Run\",\"value\":\"[View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}]}]}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}


      # Notify Discord when build starts
      - name: Notify Discord (Build Started)
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"username\": \"CI/CD Bot\", \"embeds\": [{\"title\": \"üöÄ Build Started\",\"color\": 3447003,\"fields\":[{\"name\":\"Repository\",\"value\":\"${{ github.repository }}\"},{\"name\":\"Branch\",\"value\":\"${{ github.ref_name }}\"},{\"name\":\"Workflow Run\",\"value\":\"[View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}]}]}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PROJECT_NAME }}
          directory: ./build

      # Notify Discord on success
      - name: Notify Discord (Success)
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"username\": \"CI/CD Bot\", \"embeds\": [{\"title\": \"‚úÖ Deployment Successful\",\"color\": 3066993,\"fields\":[{\"name\":\"Repository\",\"value\":\"${{ github.repository }}\"},{\"name\":\"Branch\",\"value\":\"${{ github.ref_name }}\"},{\"name\":\"Status\",\"value\":\"Success\"},{\"name\":\"Workflow Run\",\"value\":\"[View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}]}]}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Notify Discord on failure
      - name: Notify Discord (Failure)
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"username\": \"CI/CD Bot\", \"embeds\": [{\"title\": \"‚ùå Deployment Failed\",\"color\": 15158332,\"fields\":[{\"name\":\"Repository\",\"value\":\"${{ github.repository }}\"},{\"name\":\"Branch\",\"value\":\"${{ github.ref_name }}\"},{\"name\":\"Status\",\"value\":\"Failed\"},{\"name\":\"Workflow Run\",\"value\":\"[View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}]}]}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
