name: Build, Scan & Deploy React to Cloudflare Pages

on:
  push:
    branches:
      - main

jobs:
  # -------------------------
  # Semgrep Security Scan
  # -------------------------
  semgrep-scan:
    runs-on: ubuntu-latest
    outputs:
      scan-status: ${{ steps.semgrep.outputs.status }}
      top-findings: ${{ steps.semgrep.outputs.top-findings }}
      issues-found: ${{ steps.check.outputs.issues }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Semgrep CLI
        run: |
          curl -sSL https://github.com/returntocorp/semgrep/releases/download/v1.46.0/semgrep-linux-amd64-v1.46.0 -o semgrep
          chmod +x semgrep
          sudo mv semgrep /usr/local/bin/

      - name: Run Semgrep scan
        id: semgrep
        run: |
          # Run full Semgrep scan
          semgrep --config p/ci --error --sarif > semgrep.sarif || true
          semgrep --config p/ci > semgrep-summary.txt || true

          # Prepare top 15 findings
          if [ -s semgrep-summary.txt ]; then
            TOP15=$(head -n 15 semgrep-summary.txt)
          else
            TOP15="‚úÖ No issues found"
          fi

          # Export outputs
          echo "top-findings<<EOF" >> $GITHUB_OUTPUT
          echo "$TOP15" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "status=completed" >> $GITHUB_OUTPUT

      - name: Check for issues
        id: check
        run: |
          if [ -s semgrep-summary.txt ]; then
            echo "issues=true" >> $GITHUB_OUTPUT
          else
            echo "issues=false" >> $GITHUB_OUTPUT
          fi

  # -------------------------
  # Build React App
  # -------------------------
  build-app:
    runs-on: ubuntu-latest
    needs: semgrep-scan
    if: needs.semgrep-scan.outputs.issues-found == 'false'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build

  # -------------------------
  # Deploy React App
  # -------------------------
  deploy-app:
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PROJECT_NAME }}
          directory: ./build

  # -------------------------
  # Discord Notification
  # -------------------------
  notify-discord:
    runs-on: ubuntu-latest
    needs: [semgrep-scan, build-app, deploy-app]
    if: always()
    steps:
      - name: Send Discord notification
        uses: rjstone/discord-webhook-notify@v2.2.1
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: "üöÄ Build & Deploy Report"
          description: |
            **Branch**: `${{ github.ref_name }}`
            **Commit**: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            **Semgrep Status**: `${{ needs.semgrep-scan.outputs.status }}`
            **Build Status**: ${{ needs.build-app.result }}
            **Deploy Status**: ${{ needs.deploy-app.result }}
            **Date/Time**: `$(date +"%Y-%m-%d %H:%M:%S %Z")`
          text: |
            üîç **Semgrep Findings (Top 15)**:
            ```bash
            ${{ needs.semgrep-scan.outputs.top-findings }}
            ```
          color: 3066993
