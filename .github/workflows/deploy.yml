name: Build, Scan & Deploy React to Cloudflare Pages

on:
  push:
    branches:
      - main

jobs:
  # -------------------------
  # Semgrep Security Scan
  # -------------------------
  semgrep-scan:
    runs-on: ubuntu-latest
    outputs:
      scan-status: ${{ steps.semgrep.outputs.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Semgrep CLI
        run: |
          curl -sSL https://github.com/returntocorp/semgrep/releases/download/v1.46.0/semgrep-linux-amd64-v1.46.0 -o semgrep
          chmod +x semgrep
          sudo mv semgrep /usr/local/bin/

      - name: Run Semgrep scan
        id: semgrep
        run: |
          semgrep --config p/ci --sarif > semgrep.sarif || true
          echo "status=completed" >> $GITHUB_OUTPUT

      - name: Upload Semgrep results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif
          path: semgrep.sarif

  # -------------------------
  # Build & Deploy React App
  # -------------------------
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: semgrep-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PROJECT_NAME }}
          directory: ./build

      - name: Notify Discord
        uses: tsickert/discord-webhook@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: |
            ðŸš€ **Build & Deploy Report**
            Branch: `${{ github.ref }}`
            Commit: `${{ github.sha }}`
            Semgrep Scan: `${{ needs.semgrep-scan.outputs.scan-status }}`
            Build & Deploy: `${{ job.status }}`


            
