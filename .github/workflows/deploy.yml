name: Build, Scan & Deploy React to Cloudflare Pages

on:
  push:
    branches:
      - main

jobs:
  # -------------------------
  # Semgrep Security Scan Job
  # -------------------------
  semgrep-scan:
    runs-on: ubuntu-latest
    outputs:
      semgrep-result: ${{ steps.semgrep.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Semgrep
        id: semgrep
        uses: returntocorp/semgrep-action@v2
        with:
          config: "p/ci" # or your custom config
          fail-on-violation: false
        continue-on-error: true

      - name: Capture Semgrep result
        run: echo "result=${{ job.status }}" >> $GITHUB_OUTPUT

  # -------------------------
  # Build & Deploy Job
  # -------------------------
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: semgrep-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PROJECT_NAME }}
          directory: ./build

      # -------------------------
      # Discord Notification
      # -------------------------
      - name: Notify Discord
        if: always()
        uses: Ilshidur/action-discord@v2
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: |
            ðŸš€ **Build & Deploy Report**
            Branch: `${{ github.ref }}`
            Commit: `${{ github.sha }}`
            Semgrep Scan: `${{ needs.semgrep-scan.outputs.semgrep-result }}`
            Build & Deploy: `${{ job.status }}`
