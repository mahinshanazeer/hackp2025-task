  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./build
      - name: Download Semgrep summary
        uses: actions/download-artifact@v4
        with:
          name: semgrep-summary
          path: ./semgrep

      - name: Prepare full deployment report
        id: full_report
        run: |
          BRANCH="${GITHUB_REF##*/}"
          COMMIT_SHORT="${GITHUB_SHA::7}"
          COMMIT_URL="https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
          NOW=$(date +"%Y-%m-%d %H:%M:%S %Z")

          # Read semgrep summary (provide fallback)
          if [ -f ./semgrep/semgrep-summary.txt ]; then
            SEMGREP_SUMMARY=$(sed -n '1,200p' ./semgrep/semgrep-summary.txt)
          else
            SEMGREP_SUMMARY="No semgrep-summary artifact found"
          fi

          # Build and deploy status (build status available from needs.build.result)
          BUILD_STATUS="${{ needs.build.result }}"
          DEPLOY_STATUS="${{ job.status }}"

          # Compose report (limit semgrep lines shown if very large)
          cat > full-report.txt <<EOF
Branch: ${BRANCH}
Commit: ${COMMIT_SHORT} - ${COMMIT_URL}
Date/Time: ${NOW}
Build status: ${BUILD_STATUS}
Deploy status: ${DEPLOY_STATUS}

Semgrep Findings:
${SEMGREP_SUMMARY}
EOF

          # Push multiline output for later steps
          echo "report<<EOF" >> $GITHUB_OUTPUT
          cat full-report.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PROJECT_NAME }}
          directory: ./build

      - name: Send Discord notification
        uses: rjstone/discord-webhook-notify@v2.2.1
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: "üöÄ Build & Deploy Report"
          description: |
            **Branch**: `${{ github.ref_name }}`
            **Commit**: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            **Semgrep Status**: `${{ needs.semgrep-scan.outputs.scan-status }}`
            **Build Status**: ${{ needs.build.result }}
            **Deploy Status**: ${{ job.status }}
            **Date/Time**: `${{ steps.full_report.outputs.report }}`

          text: |
            üîç **Full Deployment Report**:
            ```
            ${{ steps.full_report.outputs.report }}
            ```
          color: "${{ needs.semgrep-scan.outputs.semgrep-color }}"
